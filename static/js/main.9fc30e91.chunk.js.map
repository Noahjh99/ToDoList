{"version":3,"sources":["Header.jsx","ToDo.jsx","ToDoList.jsx","ToDoForm.jsx","App.js","index.js"],"names":["Header","ToDo","todo","handleToggle","id","name","value","onClick","e","preventDefault","currentTarget","className","complete","task","ToDoList","toDoList","handleFilter","map","style","margin","ToDoForm","addTask","useState","userInput","setUserInput","onSubmit","type","onChange","placeholder","App","data","setToDoList","copy","length","mapped","Number","filtered","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAUeA,EARA,WACX,OACI,iCACI,+CCWGC,EAdF,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,aAOjB,OACI,qBAAKC,GAAIF,EAAKE,GAA8BC,KAAK,OAAOC,MAAOJ,EAAKE,GAAIG,QANxD,SAACC,GACjBA,EAAEC,iBACFN,EAAaK,EAAEE,cAAcN,KAIiEO,UAAWT,EAAKU,SAAW,cAAgB,OAAzI,SACKV,EAAKW,MADaX,EAAKE,GAAKF,EAAKW,OCM/BC,EAbE,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,SAAUZ,EAAgC,EAAhCA,aAAca,EAAkB,EAAlBA,aACvC,OACI,gCACKD,EAASE,KAAI,SAAAf,GACV,OACI,cAAC,EAAD,CAAMA,KAAMA,EAAMC,aAAcA,EAAca,aAAcA,OAGpE,wBAAQE,MAAO,CAACC,OAAQ,QAASZ,QAASS,EAA1C,iCCaGI,EAtBE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EAEMC,mBAAS,IAFf,mBAEtBC,EAFsB,KAEXC,EAFW,KAa9B,OACI,uBAAMb,UAAU,YAAYc,SANX,SAACjB,GAClBA,EAAEC,iBACFY,EAAQE,GACRC,EAAa,KAGb,UACI,uBAAOlB,MAAOiB,EAAWG,KAAK,OAAOC,SAXxB,SAACnB,GAClBgB,EAAahB,EAAEE,cAAcJ,QAUoCsB,YAAY,kBACzE,4CACA,2BCuBGC,MAlCf,WAAgB,IAAD,EAEqBP,mBAASQ,GAF9B,mBAELf,EAFK,KAEKgB,EAFL,KAwBb,OACE,sBAAKpB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAUU,QATE,SAACE,GACf,IAAIS,EAAI,YAAOjB,GACfiB,EAAI,sBAAOA,GAAP,CAAa,CAAE5B,GAAIW,EAASkB,OAAS,EAAGpB,KAAMU,EAAWX,UAAU,KACvEmB,EAAYC,MAOV,cAAC,EAAD,CAAUjB,SAAUA,EAAUZ,aAxBb,SAACC,GACpB,IAAI8B,EAASnB,EAASE,KAAI,SAAAJ,GACxB,OAAOA,EAAKT,KAAO+B,OAAO/B,GAAnB,2BAA8BS,GAA9B,IAAoCD,UAAWC,EAAKD,WAApD,eAAsEC,MAE/EkB,EAAYG,IAoBgDlB,aAjBzC,WACnB,IAAIoB,EAAWrB,EAASsB,QAAO,SAAAxB,GAC7B,OAAQA,EAAKD,YAEfmB,EAAYK,UClBhBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9fc30e91.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return (\n        <header>\n            <h1>To Do List</h1>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\n\nconst ToDo = ({todo, handleToggle}) => {\n\n    const handleClick = (e) => {\n        e.preventDefault()\n        handleToggle(e.currentTarget.id)\n    }\n\n    return (\n        <div id={todo.id} key={todo.id + todo.task} name=\"todo\" value={todo.id} onClick={handleClick} className={todo.complete ? \"todo strike\" : \"todo\"}>\n            {todo.task}\n        </div>\n    );\n};\n\nexport default ToDo;","import React from 'react';\nimport ToDo from './ToDo';\n\nconst ToDoList = ({toDoList, handleToggle, handleFilter}) => {\n    return (\n        <div>\n            {toDoList.map(todo => {\n                return (\n                    <ToDo todo={todo} handleToggle={handleToggle} handleFilter={handleFilter}/>\n                )\n            })}\n            <button style={{margin: '20px'}} onClick={handleFilter}>Clear Completed</button>\n        </div>\n    );\n};\n\nexport default ToDoList;","import React, { useState } from 'react';\n\nconst ToDoForm = ({ addTask }) => {\n\n    const [ userInput, setUserInput ] = useState('');\n\n    const handleChange = (e) => {\n        setUserInput(e.currentTarget.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addTask(userInput);\n        setUserInput(\"\");\n    }\n    return (\n        <form className='todo-form' onSubmit={handleSubmit}>\n            <input value={userInput} type=\"text\" onChange={handleChange} placeholder=\"Enter task...\"/>\n            <button>Submit</button>\n            <br />\n        </form>\n    );\n};\n\nexport default ToDoForm;","import React, { useState } from 'react';\n//mock data\nimport data from \"./data.json\";\n//components\nimport Header from \"./Header\";\nimport ToDoList from \"./ToDoList\";\nimport ToDoForm from './ToDoForm';\n\nfunction App() {\n  \n  const [ toDoList, setToDoList ] = useState(data);\n\n  const handleToggle = (id) => {\n    let mapped = toDoList.map(task => {\n      return task.id === Number(id) ? { ...task, complete: !task.complete } : { ...task};\n    });\n    setToDoList(mapped);\n  }\n\n  const handleFilter = () => {\n    let filtered = toDoList.filter(task => {\n      return !task.complete;\n    });\n    setToDoList(filtered);\n  }\n\n  const addTask = (userInput ) => {\n    let copy = [...toDoList];\n    copy = [...copy, { id: toDoList.length + 1, task: userInput, complete: false }];\n    setToDoList(copy);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <ToDoForm addTask={addTask}/>\n      <ToDoList toDoList={toDoList} handleToggle={handleToggle} handleFilter={handleFilter}/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}